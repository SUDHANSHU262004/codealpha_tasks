# -*- coding: utf-8 -*-
"""Handwritten character Recognition.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vF1QoXkVn3nzRspZDC-rXal9ivSb7d-i
"""

pip install tensorflow keras numpy matplotlib

import tensorflow as tf
from tensorflow import keras
import numpy as np
import matplotlib.pyplot as plt

# Load MNIST dataset (handwritten digits)
(X_train, y_train), (X_test, y_test) = keras.datasets.mnist.load_data()

# Normalize images
X_train, X_test = X_train / 255.0, X_test / 255.0

# Build a simple CNN model
model = keras.Sequential([
    keras.layers.Conv2D(32, (3,3), activation='relu', input_shape=(28, 28, 1)),
    keras.layers.MaxPooling2D((2,2)),
    keras.layers.Flatten(),
    keras.layers.Dense(128, activation='relu'),
    keras.layers.Dense(10, activation='softmax')  # 10 digits (0-9)
])

# Compile and train
model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])
model.fit(X_train[..., np.newaxis], y_train, epochs=5, validation_data=(X_test[..., np.newaxis], y_test))

# Test on a random image
index = np.random.randint(0, len(X_test))
plt.imshow(X_test[index], cmap='gray')
plt.show()
prediction = model.predict(X_test[index][np.newaxis, ..., np.newaxis])
print("Predicted Digit:", np.argmax(prediction))